package NewLanguage.types;

/*Generated by MPS */

import jetbrains.mps.lang.coderules.template.AbstractTermDeclaration;
import jetbrains.mps.logic.dataform.DataForm;
import jetbrains.mps.logic.dataform.TermNode;
import jetbrains.mps.logic.dataform.ValueRole;
import jetbrains.mps.logic.dataform.Value;

public class Constants_termTable {

  public static class intType_term extends AbstractTermDeclaration {

    public intType_term(boolean pattern) {
      this.pattern = pattern;
    }


    @Override
    public DataForm getTerm() {
      return (TermNode.create(TermNode.symbol(1), ValueRole.create("_term", Value.create("intType"))));
    }

    private boolean pattern;
  }
  public static class stringType_term extends AbstractTermDeclaration {

    public stringType_term(boolean pattern) {
      this.pattern = pattern;
    }


    @Override
    public DataForm getTerm() {
      return (TermNode.create(TermNode.symbol(1), ValueRole.create("_term", Value.create("stringType"))));
    }

    private boolean pattern;
  }


}
